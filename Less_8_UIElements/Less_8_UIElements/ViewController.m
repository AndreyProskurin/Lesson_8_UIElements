//
//  ViewController.m
//  Less_8_UIElements
//
//  Created by Andrey Proskurin on 01.09.17.
//  Copyright © 2017 Andrey Proskurin. All rights reserved.
//

//                                                      Основное задание:
//
//  Создать в сториборде таббарконтроллер, который будет содеражть в себе 2 экрана. Каждый из экранов должен содержать кнопку перехода на другой экран через навигейшин контроллер (т.е. Каждый экран таббар контроллера состоит из навигейшин контроллера с 2-мя контроллерами). Последний экран каждой вкладки должен содержать таблицу со списком, например кофе или машин (можно взять генерацию списка машин или списка кофе из предыдущих лекций). Каждый экран таблицы сториборда должен иметь собственный UIViewController-класс.

//                                      Дополнительное задание:
//
//    1 Добавить кнопку на каждый экран с таблицей для генерации списка (машин / кофе / другой список на свое усмотрение). Можно использовать один базовый массив для хранения списка, а для таблицы создавать массив, который будет заполняться данными из базового массива случайным образом.
//
//    2 Применить MVC паттерн для экранов с таблицами без использования протоколов. Т.е. Список для таблицы должен храниться в отдельной модели, а таблица должна лежать в контейнере UIView с названием contentView и контейнер должен быть привязан к отдельному классу ContentView, например, для экрана со списком машин - это CarContentView класс (наследник от UIView), а для списка кофейных напитков - это CoffeeContentView класс (также наследник от UIView).
//
//    По нажатию на кнопку генерации списка должна выполняться генерация списка для таблицы и затем нужно перезагрузить таблицу с новыми данными. Для перерисовки таблицы использовать метод таблицы:
//    [tableView reloadData];
//
//    Если MVC реализован верно, то в контроллере будет обращение к таблице следующим образом:
//
//    [self.contentView.tableView relaodData];
//
//    tableView - это будет проперти-аутлет таблицы (возможно другое название таблицы)
//
//    3 Выполнить второе задание с использованием протоколов.
//
//    Т.е. Только у экранов с таблицами будет MVC.

#import "ViewController.h"

@interface ViewController ()

@end

@implementation ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
}

@end
